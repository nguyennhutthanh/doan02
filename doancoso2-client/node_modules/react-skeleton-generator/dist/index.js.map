{"version":3,"file":"index.js","sources":["../src/helpers/lightOrDark.ts","../src/styles/Colors.ts","../src/context/SkeletonContext.tsx","../src/helpers/withSkeletonContext.tsx","../src/components/Skeleton/SkeletonThemeProvider/styles.ts","../src/components/Skeleton/SkeletonThemeProvider/index.tsx","../src/components/Skeleton/styles.ts","../src/components/Skeleton/index.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-bitwise */\n/* eslint-disable prefer-destructuring */\n\nexport function lightOrDark(color: any): 'light' | 'dark' {\n  // Variables for red, green, blue values\n  let r;\n  let g;\n  let b;\n\n  let colorTemp = color;\n\n  // Check the format of the color, HEX or RGB?\n  if (colorTemp.match(/^rgb/)) {\n    // If RGB --> store the red, green, blue values in separate variables\n    colorTemp = colorTemp.match(\n      /^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/,\n    );\n\n    r = colorTemp[1];\n    g = colorTemp[2];\n    b = colorTemp[3];\n  } else {\n    // If hex --> Convert it to RGB: http://gist.github.com/983661\n    colorTemp = +`0x${colorTemp\n      .slice(1)\n      .replace(colorTemp.length < 5 && /./g, '$&$&')}`;\n\n    r = colorTemp >> 16;\n    g = (colorTemp >> 8) & 255;\n    b = colorTemp & 255;\n  }\n  // HSP (Highly Sensitive Poo) equation from http://alienryderflex.com/hsp.html\n  const hsp = Math.sqrt(0.299 * (r * r) + 0.587 * (g * g) + 0.114 * (b * b));\n\n  // Using the HSP value, determine whether the color is light or dark\n  if (hsp > 127.5) {\n    return 'light';\n  }\n\n  return 'dark';\n}\n","export const Colors = {\n  background: '#F1EFF1',\n};\n","import * as React from 'react';\n\nimport { Colors } from '../styles/Colors';\n\nimport {\n  SkeletonContextProps,\n  IAuthProviderProps,\n  AnimationTypes,\n  HighlightTypes,\n} from '../components/Skeleton/types';\n\nexport const SkeletonContext = React.createContext<SkeletonContextProps>(\n  {} as SkeletonContextProps,\n);\n\nconst SkeletonProvider = ({ children }: IAuthProviderProps): JSX.Element => {\n  const [backgroundColor, setBackgroundColor] = React.useState(\n    Colors.background,\n  );\n  const [animation, setAnimation] = React.useState<AnimationTypes>('shimmer');\n  const [highlight, setHighlight] = React.useState<\n    HighlightTypes | undefined\n  >();\n  const [animationDuration, setAnimationDuration] = React.useState(1);\n\n  const changeBackgroundColor = React.useCallback((color: string) => {\n    setBackgroundColor(color);\n  }, []);\n\n  const changeAnimation = React.useCallback((anim: AnimationTypes) => {\n    setAnimation(anim);\n  }, []);\n\n  const changeHighlight = React.useCallback((high: HighlightTypes) => {\n    setHighlight(high);\n  }, []);\n\n  const changeAnimationDuration = React.useCallback((duration: number) => {\n    setAnimationDuration(duration);\n  }, []);\n\n  return (\n    <SkeletonContext.Provider\n      value={{\n        backgroundColor,\n        changeBackgroundColor,\n        animation,\n        changeAnimation,\n        highlight,\n        changeHighlight,\n        animationDuration,\n        changeAnimationDuration,\n      }}\n    >\n      {children}\n    </SkeletonContext.Provider>\n  );\n};\n\nfunction useSkeleton(): SkeletonContextProps {\n  const context = React.useContext(SkeletonContext);\n\n  if (!context) {\n    throw new Error('useSkeleton must be used within an SkeletonProvider');\n  }\n\n  return context;\n}\n\nexport { SkeletonProvider, useSkeleton };\n","import * as React from 'react';\n\nimport { SkeletonProvider } from '../context/SkeletonContext';\n\nexport function withSkeletonContext(\n  WrappedComponent: React.ElementType,\n): React.ElementType {\n  const Wrapper = (props: unknown) => {\n    return (\n      <SkeletonProvider>\n        <WrappedComponent {...props} />\n      </SkeletonProvider>\n    );\n  };\n\n  return Wrapper;\n}\n","import styled from 'styled-components';\n\nconst StyledContainer = styled.div``;\n\nexport { StyledContainer };\n","import * as React from 'react';\n\nimport { useSkeleton } from '../../../context/SkeletonContext';\nimport { withSkeletonContext } from '../../../helpers/withSkeletonContext';\nimport { Colors } from '../../../styles/Colors';\n\nimport { SkeletonThemeProviderProps } from './types';\nimport { StyledContainer } from './styles';\n\nconst BaseSkeletonThemeProvider = ({\n  color = Colors.background,\n  animation = 'shimmer',\n  animationDuration = 1,\n  style,\n  highlight,\n  children,\n  dataTestId = 'SkeletonThemeProvider',\n}: SkeletonThemeProviderProps): JSX.Element => {\n  const {\n    changeBackgroundColor,\n    changeAnimation,\n    changeHighlight,\n    changeAnimationDuration,\n  } = useSkeleton();\n\n  React.useEffect(() => {\n    changeBackgroundColor(color);\n  }, [color, changeBackgroundColor]);\n\n  React.useEffect(() => {\n    changeAnimation(animation);\n  }, [animation, changeAnimation]);\n\n  React.useEffect(() => {\n    if (highlight) {\n      changeHighlight(highlight);\n    }\n  }, [highlight, changeHighlight]);\n\n  React.useEffect(() => {\n    changeAnimationDuration(animationDuration);\n  }, [animationDuration, changeAnimationDuration]);\n\n  return (\n    <StyledContainer style={style} data-testid={dataTestId}>\n      {children}\n    </StyledContainer>\n  );\n};\n\nexport const SkeletonThemeProvider = withSkeletonContext(\n  BaseSkeletonThemeProvider,\n) as ({\n  color,\n  animation,\n  animationDuration,\n  style,\n  highlight,\n  children,\n  dataTestId,\n}: SkeletonThemeProviderProps) => JSX.Element;\n","import styled, { keyframes, css } from 'styled-components';\nimport { lighten, darken } from 'polished';\n\nimport { SkeletonStyledProps } from './types';\n\nconst shimmerAnimation = keyframes`\n  0% {\n    background-position: 0% 0%;\n  }\n  100% {\n    background-position: -135% 0%;\n  }\n`;\n\nconst opacityAnimation = (\n  backgroundColor: string,\n  isLighten: boolean,\n) => keyframes`\n  0% {\n    background-color: ${backgroundColor};\n  }\n  100% {\n    background-color: ${\n      isLighten ? darken(0.2, backgroundColor) : lighten(0.4, backgroundColor)\n    };\n  }\n`;\n\nconst AnimationVariations = (\n  backgroundColor: string,\n  isLighten: boolean,\n  animationDuration: number,\n) => ({\n  shimmer: css`\n    &:after {\n      position: absolute;\n      content: '';\n      width: 100%;\n      height: 100%;\n      background-image: linear-gradient(\n        to right,\n        ${backgroundColor} 0%,\n        ${isLighten\n            ? darken(0.2, backgroundColor)\n            : lighten(0.2, backgroundColor)}\n          50%,\n        ${backgroundColor} 100%\n      );\n      background-size: 400% 400%;\n      animation: ${shimmerAnimation} ${animationDuration}s linear infinite;\n    }\n  `,\n  opacity: css`\n    animation: ${opacityAnimation(backgroundColor, isLighten)}\n      ${animationDuration}s linear infinite alternate;\n  `,\n});\n\nconst StyledSkeletonContainer = styled.div<SkeletonStyledProps>`\n  width: ${props => props.width};\n  height: ${props => props.height};\n  background: ${props => props.backgroundColor};\n  position: relative;\n  overflow: hidden;\n  border-radius: ${props => props.borderRadius};\n\n  &:not(:last-child) {\n    margin-bottom: ${props => props.spaceBetween};\n  }\n\n  ${props =>\n    AnimationVariations(\n      props.backgroundColor,\n      props.isLighten,\n      props.animationDuration,\n    )[props.animation]}\n`;\n\nexport { StyledSkeletonContainer };\n","import * as React from 'react';\n\nimport { lightOrDark } from '../../helpers/lightOrDark';\nimport { useSkeleton } from '../../context/SkeletonContext';\n\nimport { SkeletonThemeProvider } from './SkeletonThemeProvider';\n\nimport { StyledSkeletonContainer } from './styles';\nimport { SkeletonProps } from './types';\n\nconst Skeleton = ({\n  height = '30px',\n  width = '100%',\n  borderRadius = '4px',\n  style,\n  count = 1,\n  spaceBetween = '10px',\n  widthMultiple,\n  heightMultiple,\n  dataTestId = 'Skeleton',\n}: SkeletonProps): JSX.Element => {\n  const { backgroundColor, animation, highlight, animationDuration } =\n    useSkeleton();\n  const [isLighten, setIsLighten] = React.useState(true);\n\n  React.useEffect(() => {\n    if (highlight) {\n      setIsLighten(highlight !== 'light');\n    } else {\n      const isColorLight = lightOrDark(backgroundColor);\n\n      setIsLighten(isColorLight === 'light');\n    }\n  }, [highlight, backgroundColor]);\n\n  const renderSkeleton = Array.from(Array(count).keys()).map((_, index) => {\n    const key = (Math.random() * 100000).toFixed(5);\n\n    const witdthSkeleton = widthMultiple?.length\n      ? widthMultiple[index] || width\n      : width;\n    const heightSkeleton = heightMultiple?.length\n      ? heightMultiple[index] || height\n      : height;\n    return (\n      <StyledSkeletonContainer\n        isLighten={isLighten}\n        backgroundColor={backgroundColor}\n        animation={animation}\n        animationDuration={animationDuration}\n        width={witdthSkeleton}\n        height={heightSkeleton}\n        borderRadius={borderRadius}\n        style={style}\n        spaceBetween={spaceBetween}\n        key={key}\n        data-testid={`${dataTestId}-${index}`}\n      />\n    );\n  });\n\n  return <>{renderSkeleton}</>;\n};\n\nSkeleton.SkeletonThemeProvider = SkeletonThemeProvider;\n\nexport { Skeleton };\n"],"names":["React","styled","keyframes","darken","lighten","css"],"mappings":"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"}