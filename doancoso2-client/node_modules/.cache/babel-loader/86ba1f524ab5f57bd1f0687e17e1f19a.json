{"ast":null,"code":"var _jsxFileName = \"D:\\\\DoAnCoSo2\\\\doancoso02client-gui\\\\doancoso2-client\\\\src\\\\Components\\\\DetailProduct\\\\Comment.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm, Form } from '../../hooks/useForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFValues = {\n  id: 0,\n  name: '',\n  noiDung: '',\n  email: ''\n};\n\nconst Comment = props => {\n  _s();\n\n  const {\n    addOrEdit,\n    idComment\n  } = props;\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors\n    };\n    if ('name' in fieldValues) temp.name = fieldValues.name ? \"\" : \"This field is required.\";\n    if ('noiDung' in fieldValues) temp.noiDung = fieldValues.noiDung ? \"\" : \"This field is required.\";\n    if ('email' in fieldValues) temp.email = fieldValues.email ? \"\" : \"This field is required.\";\n    setErrors({ ...temp\n    });\n    if (fieldValues == values) return Object.values(temp).every(x => x == \"\");\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, true, validate);\n\n  const handleSubmitComment = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      const formDataComment = new FormData();\n      formDataComment.append('id', idComment);\n      formDataComment.append('name', values.name);\n      formDataComment.append('noiDung', values.noiDung);\n      formDataComment.append('email', values.email);\n      addOrEdit(formDataComment, resetForm);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmitComment,\n    className: \"new-review-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"hidden\",\n      name: \"review[rating]\",\n      defaultValue: 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"hidden\",\n      name: \"product_id\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"spr-form-title\",\n      children: \"\\u0110\\xE1nh gi\\xE1 s\\u1EA3n ph\\u1EA9m\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"spr-form-contact\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spr-form-contact-name\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"spr-form-input spr-form-input-text form-control\",\n          name: \"name\",\n          type: \"text\",\n          value: values.name,\n          onChange: handleInputChange,\n          error: errors.name,\n          placeholder: \"Nh\\u1EADp h\\u1ECD t\\xEAn\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spr-form-contact-email\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"spr-form-input spr-form-input-email form-control\",\n          placeholder: \"Nh\\u1EADp Email\",\n          autoComplete: \"off\",\n          name: \"email\",\n          type: \"email\",\n          value: values.email,\n          onChange: handleInputChange,\n          error: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spr-form-review-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spr-form-input\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"spr-form-input-textarea\",\n            rows: 6,\n            placeholder: \"N\\u1ED9i dung\",\n            autoComplete: \"off\",\n            name: \"noiDung\",\n            type: \"text\",\n            value: values.noiDung,\n            onChange: handleInputChange,\n            error: errors.noiDung\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"addComment\",\n        id: \"submitComment\",\n        className: \"btn btn-default\",\n        children: \"\\u0110\\u0103ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Comment, \"5ocbMP1VZMyUMYsNGOYcsyh4dN8=\", false, function () {\n  return [useForm];\n});\n\n_c = Comment;\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["D:/DoAnCoSo2/doancoso02client-gui/doancoso2-client/src/Components/DetailProduct/Comment.jsx"],"names":["React","useForm","Form","initialFValues","id","name","noiDung","email","Comment","props","addOrEdit","idComment","validate","fieldValues","values","temp","errors","setErrors","Object","every","x","setValues","handleInputChange","resetForm","handleSubmitComment","e","preventDefault","formDataComment","FormData","append"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,qBAA9B;;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,EAAE,EAAE,CADe;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,OAAO,EAAE,EAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAAvB;;AAOA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA2BF,KAAjC;;AAEA,QAAMG,QAAQ,GAAG,CAACC,WAAW,GAAGC,MAAf,KAA0B;AACvC,QAAIC,IAAI,GAAG,EAAE,GAAGC;AAAL,KAAX;AACA,QAAI,UAAUH,WAAd,EACIE,IAAI,CAACV,IAAL,GAAYQ,WAAW,CAACR,IAAZ,GAAmB,EAAnB,GAAwB,yBAApC;AACJ,QAAI,aAAaQ,WAAjB,EACIE,IAAI,CAACT,OAAL,GAAeO,WAAW,CAACP,OAAZ,GAAsB,EAAtB,GAA2B,yBAA1C;AACJ,QAAI,WAAWO,WAAf,EACIE,IAAI,CAACR,KAAL,GAAaM,WAAW,CAACN,KAAZ,GAAoB,EAApB,GAAyB,yBAAtC;AACJU,IAAAA,SAAS,CAAC,EACN,GAAGF;AADG,KAAD,CAAT;AAGA,QAAIF,WAAW,IAAIC,MAAnB,EACI,OAAOI,MAAM,CAACJ,MAAP,CAAcC,IAAd,EAAoBI,KAApB,CAA0BC,CAAC,IAAIA,CAAC,IAAI,EAApC,CAAP;AACP,GAbD;;AAcA,QAAM;AACFN,IAAAA,MADE;AACMO,IAAAA,SADN;AAEFL,IAAAA,MAFE;AAEMC,IAAAA,SAFN;AAGFK,IAAAA,iBAHE;AAIFC,IAAAA;AAJE,MAKFtB,OAAO,CAACE,cAAD,EAAiB,IAAjB,EAAuBS,QAAvB,CALX;;AAOA,QAAMY,mBAAmB,GAAGC,CAAC,IAAI;AAC7BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAId,QAAQ,EAAZ,EAAgB;AACZ,YAAMe,eAAe,GAAG,IAAIC,QAAJ,EAAxB;AACAD,MAAAA,eAAe,CAACE,MAAhB,CAAuB,IAAvB,EAA6BlB,SAA7B;AACAgB,MAAAA,eAAe,CAACE,MAAhB,CAAuB,MAAvB,EAA+Bf,MAAM,CAACT,IAAtC;AACAsB,MAAAA,eAAe,CAACE,MAAhB,CAAuB,SAAvB,EAAkCf,MAAM,CAACR,OAAzC;AACAqB,MAAAA,eAAe,CAACE,MAAhB,CAAuB,OAAvB,EAAgCf,MAAM,CAACP,KAAvC;AACAG,MAAAA,SAAS,CAACiB,eAAD,EAAkBJ,SAAlB,CAAT;AACH;AACJ,GAVD;;AAYA,sBACI;AAAM,IAAA,QAAQ,EAAEC,mBAAhB;AAAqC,IAAA,SAAS,EAAC,iBAA/C;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,gBAA1B;AAA2C,MAAA,YAAY,EAAE;AAAzD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAU,MAAA,SAAS,EAAC,kBAApB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,+BACI;AAAO,UAAA,SAAS,EAAC,iDAAjB;AACI,UAAA,IAAI,EAAC,MADT;AACgB,UAAA,IAAI,EAAC,MADrB;AAEI,UAAA,KAAK,EAAEV,MAAM,CAACT,IAFlB;AAGI,UAAA,QAAQ,EAAEiB,iBAHd;AAII,UAAA,KAAK,EAAEN,MAAM,CAACX,IAJlB;AAKI,UAAA,WAAW,EAAC,0BALhB;AAMI,UAAA,YAAY,EAAC;AANjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,+BACI;AAAO,UAAA,SAAS,EAAC,kDAAjB;AACI,UAAA,WAAW,EAAC,iBADhB;AAEI,UAAA,YAAY,EAAC,KAFjB;AAGI,UAAA,IAAI,EAAC,OAHT;AAGiB,UAAA,IAAI,EAAC,OAHtB;AAII,UAAA,KAAK,EAAES,MAAM,CAACP,KAJlB;AAKI,UAAA,QAAQ,EAAEe,iBALd;AAMI,UAAA,KAAK,EAAEN,MAAM,CAACT;AANlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eA0BI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACI;AACI,YAAA,SAAS,EAAC,yBADd;AAEI,YAAA,IAAI,EAAE,CAFV;AAEa,YAAA,WAAW,EAAC,eAFzB;AAGI,YAAA,YAAY,EAAC,KAHjB;AAII,YAAA,IAAI,EAAC,SAJT;AAImB,YAAA,IAAI,EAAC,MAJxB;AAKI,YAAA,KAAK,EAAEO,MAAM,CAACR,OALlB;AAMI,YAAA,QAAQ,EAAEgB,iBANd;AAOI,YAAA,KAAK,EAAEN,MAAM,CAACV;AAPlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA1BJ,eAyCI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,IAAI,EAAC,YAA3B;AAAwC,QAAA,EAAE,EAAC,eAA3C;AAA2D,QAAA,SAAS,EAAC,iBAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAzCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgDH,CApFD;;GAAME,O;UAsBEP,O;;;KAtBFO,O;AAqFN,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\nimport { useForm, Form } from '../../hooks/useForm';\r\n\r\nconst initialFValues = {\r\n    id: 0,\r\n    name: '',\r\n    noiDung: '',\r\n    email: '',\r\n}\r\n\r\nconst Comment = (props) => {\r\n    const { addOrEdit, idComment } = props;\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('name' in fieldValues)\r\n            temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n        if ('noiDung' in fieldValues)\r\n            temp.noiDung = fieldValues.noiDung ? \"\" : \"This field is required.\"\r\n        if ('email' in fieldValues)\r\n            temp.email = fieldValues.email ? \"\" : \"This field is required.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const {\r\n        values, setValues,\r\n        errors, setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    const handleSubmitComment = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            const formDataComment = new FormData()\r\n            formDataComment.append('id', idComment)\r\n            formDataComment.append('name', values.name)\r\n            formDataComment.append('noiDung', values.noiDung)\r\n            formDataComment.append('email', values.email)\r\n            addOrEdit(formDataComment, resetForm);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmitComment} className=\"new-review-form\">\r\n            <input type=\"hidden\" name=\"review[rating]\" defaultValue={3} />\r\n            <input type=\"hidden\" name=\"product_id\" />\r\n            <h3 className=\"spr-form-title\">Đánh giá sản phẩm</h3>\r\n            <fieldset className=\"spr-form-contact\">\r\n                <div className=\"spr-form-contact-name\">\r\n                    <input className=\"spr-form-input spr-form-input-text form-control\"\r\n                        name=\"name\" type=\"text\"\r\n                        value={values.name}\r\n                        onChange={handleInputChange}\r\n                        error={errors.name}\r\n                        placeholder=\"Nhập họ tên\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n                <div className=\"spr-form-contact-email\">\r\n                    <input className=\"spr-form-input spr-form-input-email form-control\"\r\n                        placeholder=\"Nhập Email\"\r\n                        autoComplete=\"off\"\r\n                        name=\"email\" type=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleInputChange}\r\n                        error={errors.email}\r\n                    />\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div className=\"spr-form-review-body\">\r\n                    <div className=\"spr-form-input\">\r\n                        <textarea\r\n                            className=\"spr-form-input-textarea\"\r\n                            rows={6} placeholder=\"Nội dung\"\r\n                            autoComplete=\"off\"\r\n                            name=\"noiDung\" type=\"text\"\r\n                            value={values.noiDung}\r\n                            onChange={handleInputChange}\r\n                            error={errors.noiDung}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <div className=\"submit\">\r\n                <button type=\"submit\" name=\"addComment\" id=\"submitComment\" className=\"btn btn-default\"\r\n                >Đăng</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\nexport default Comment;"]},"metadata":{},"sourceType":"module"}