{"ast":null,"code":"var _jsxFileName = \"D:\\\\DoAnCoSo2\\\\doancoso02client-gui\\\\doancoso2-client\\\\src\\\\Components\\\\DetailProduct\\\\Comment.jsx\";\nimport React from 'react';\nimport { useForm, Form } from '../../../src/hooks/useForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFValues = {\n  id: 0,\n  name: '',\n  noiDung: '',\n  email: ''\n};\n\nconst Comment = props => {\n  var _s = $RefreshSig$();\n\n  const {\n    addOrEdit,\n    idComment\n  } = props;\n\n  const validate = (fieldValues = values) => {\n    _s();\n\n    let temp = { ...errors\n    };\n\n    if (user === null) {\n      if ('name' in fieldValues) temp.name = fieldValues.name ? \"\" : \"This field is required.\";\n      if ('noiDung' in fieldValues) temp.noiDung = fieldValues.noiDung ? \"\" : \"This field is required.\";\n      if ('email' in fieldValues) temp.email = fieldValues.email ? \"\" : \"This field is required.\";\n      setErrors({ ...temp\n      });\n      if (fieldValues == values) return Object.values(temp).every(x => x == \"\");\n    }\n\n    const {\n      values,\n      setValues,\n      errors,\n      setErrors,\n      handleInputChange,\n      resetForm\n    } = useForm(initialFValues, true, validate);\n\n    const handleSubmitComment = e => {\n      e.preventDefault();\n\n      if (validate()) {\n        if (user === null) {\n          const formDataComment = new FormData();\n          formDataComment.append('id', idComment);\n          formDataComment.append('name', values.name);\n          formDataComment.append('noiDung', values.noiDung);\n          formDataComment.append('email', values.email);\n          addOrEdit(formDataComment, resetForm);\n        }\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitComment,\n      className: \"new-review-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        name: \"review[rating]\",\n        defaultValue: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        name: \"product_id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"spr-form-title\",\n        children: \"\\u0110\\xE1nh gi\\xE1 s\\u1EA3n ph\\u1EA9m\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: \"spr-form-contact\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spr-form-contact-name\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"spr-form-input spr-form-input-text form-control\",\n            placeholder: \"Nh\\u1EADp h\\u1ECD t\\xEAn\",\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spr-form-contact-email\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"spr-form-input spr-form-input-email form-control\",\n            placeholder: \"Nh\\u1EADp Email\",\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spr-form-review-body\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spr-form-input\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"spr-form-input-textarea\",\n              rows: 6,\n              placeholder: \"N\\u1ED9i dung\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          name: \"addComment\",\n          id: \"submitComment\",\n          className: \"btn btn-default\",\n          children: \"\\u0110\\u0103ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  };\n\n  _s(validate, \"uyW8XyzKMLv5nuUZo6RUB/OjXAM=\", false, function () {\n    return [useForm];\n  });\n};\n\n_c = Comment;\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["D:/DoAnCoSo2/doancoso02client-gui/doancoso2-client/src/Components/DetailProduct/Comment.jsx"],"names":["React","useForm","Form","initialFValues","id","name","noiDung","email","Comment","props","addOrEdit","idComment","validate","fieldValues","values","temp","errors","user","setErrors","Object","every","x","setValues","handleInputChange","resetForm","handleSubmitComment","e","preventDefault","formDataComment","FormData","append"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useForm, Form } from '../../../src/hooks/useForm';\r\n\r\nconst initialFValues = {\r\n    id: 0,\r\n    name: '',\r\n    noiDung: '',\r\n    email: '',\r\n}\r\n\r\nconst Comment = (props) => {\r\n    const { addOrEdit, idComment } = props;\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if (user === null) {\r\n            if ('name' in fieldValues)\r\n                temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n            if ('noiDung' in fieldValues)\r\n                temp.noiDung = fieldValues.noiDung ? \"\" : \"This field is required.\"\r\n            if ('email' in fieldValues)\r\n                temp.email = fieldValues.email ? \"\" : \"This field is required.\"\r\n            setErrors({\r\n                ...temp\r\n            })\r\n            if (fieldValues == values)\r\n                return Object.values(temp).every(x => x == \"\")\r\n        }\r\n\r\n        const {\r\n            values, setValues,\r\n            errors, setErrors,\r\n            handleInputChange,\r\n            resetForm\r\n        } = useForm(initialFValues, true, validate);\r\n\r\n        const handleSubmitComment = e => {\r\n            e.preventDefault()\r\n            if (validate()) {\r\n                if (user === null) {\r\n                    const formDataComment = new FormData()\r\n                    formDataComment.append('id', idComment)\r\n                    formDataComment.append('name', values.name)\r\n                    formDataComment.append('noiDung', values.noiDung)\r\n                    formDataComment.append('email', values.email)\r\n                    addOrEdit(formDataComment, resetForm);\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <form onSubmit={handleSubmitComment} className=\"new-review-form\">\r\n                <input type=\"hidden\" name=\"review[rating]\" defaultValue={3} />\r\n                <input type=\"hidden\" name=\"product_id\" />\r\n                <h3 className=\"spr-form-title\">Đánh giá sản phẩm</h3>\r\n                <fieldset className=\"spr-form-contact\">\r\n                    <div className=\"spr-form-contact-name\">\r\n                        <input className=\"spr-form-input spr-form-input-text form-control\"\r\n                            placeholder=\"Nhập họ tên\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"spr-form-contact-email\">\r\n                        <input className=\"spr-form-input spr-form-input-email form-control\" placeholder=\"Nhập Email\"\r\n                            autoComplete=\"off\"\r\n\r\n                        />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"spr-form-review-body\">\r\n                        <div className=\"spr-form-input\">\r\n                            <textarea className=\"spr-form-input-textarea\" rows={6} placeholder=\"Nội dung\"\r\n\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n                <div className=\"submit\">\r\n                    <button type=\"submit\" name=\"addComment\" id=\"submitComment\" className=\"btn btn-default\"\r\n                    >Đăng</button>\r\n                </div>\r\n            </form>\r\n        );\r\n    };\r\n}\r\nexport default Comment;"]},"metadata":{},"sourceType":"module"}