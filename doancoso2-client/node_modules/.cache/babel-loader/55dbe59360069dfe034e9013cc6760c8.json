{"ast":null,"code":"Object.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar React = require('react');\n\nvar styled = require('styled-components');\n\nvar polished = require('polished');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n\n  n['default'] = e;\n  return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nvar styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable no-bitwise */\n\n/* eslint-disable prefer-destructuring */\n\n\nfunction lightOrDark(color) {\n  // Variables for red, green, blue values\n  var r;\n  var g;\n  var b;\n  var colorTemp = color; // Check the format of the color, HEX or RGB?\n\n  if (colorTemp.match(/^rgb/)) {\n    // If RGB --> store the red, green, blue values in separate variables\n    colorTemp = colorTemp.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/);\n    r = colorTemp[1];\n    g = colorTemp[2];\n    b = colorTemp[3];\n  } else {\n    // If hex --> Convert it to RGB: http://gist.github.com/983661\n    colorTemp = +(\"0x\" + colorTemp.slice(1).replace(colorTemp.length < 5 && /./g, '$&$&'));\n    r = colorTemp >> 16;\n    g = colorTemp >> 8 & 255;\n    b = colorTemp & 255;\n  } // HSP (Highly Sensitive Poo) equation from http://alienryderflex.com/hsp.html\n\n\n  var hsp = Math.sqrt(0.299 * (r * r) + 0.587 * (g * g) + 0.114 * (b * b)); // Using the HSP value, determine whether the color is light or dark\n\n  if (hsp > 127.5) {\n    return 'light';\n  }\n\n  return 'dark';\n}\n\nvar Colors = {\n  background: '#F1EFF1'\n};\nvar SkeletonContext = React__namespace.createContext({});\n\nvar SkeletonProvider = function (_a) {\n  var children = _a.children;\n\n  var _b = React__namespace.useState(Colors.background),\n      backgroundColor = _b[0],\n      setBackgroundColor = _b[1];\n\n  var _c = React__namespace.useState('shimmer'),\n      animation = _c[0],\n      setAnimation = _c[1];\n\n  var _d = React__namespace.useState(),\n      highlight = _d[0],\n      setHighlight = _d[1];\n\n  var _e = React__namespace.useState(1),\n      animationDuration = _e[0],\n      setAnimationDuration = _e[1];\n\n  var changeBackgroundColor = React__namespace.useCallback(function (color) {\n    setBackgroundColor(color);\n  }, []);\n  var changeAnimation = React__namespace.useCallback(function (anim) {\n    setAnimation(anim);\n  }, []);\n  var changeHighlight = React__namespace.useCallback(function (high) {\n    setHighlight(high);\n  }, []);\n  var changeAnimationDuration = React__namespace.useCallback(function (duration) {\n    setAnimationDuration(duration);\n  }, []);\n  return React__namespace.createElement(SkeletonContext.Provider, {\n    value: {\n      backgroundColor: backgroundColor,\n      changeBackgroundColor: changeBackgroundColor,\n      animation: animation,\n      changeAnimation: changeAnimation,\n      highlight: highlight,\n      changeHighlight: changeHighlight,\n      animationDuration: animationDuration,\n      changeAnimationDuration: changeAnimationDuration\n    }\n  }, children);\n};\n\nfunction useSkeleton() {\n  var context = React__namespace.useContext(SkeletonContext);\n\n  if (!context) {\n    throw new Error('useSkeleton must be used within an SkeletonProvider');\n  }\n\n  return context;\n}\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nfunction __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, \"raw\", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n\n  return cooked;\n}\n\nfunction withSkeletonContext(WrappedComponent) {\n  var Wrapper = function (props) {\n    return React__namespace.createElement(SkeletonProvider, null, React__namespace.createElement(WrappedComponent, __assign({}, props)));\n  };\n\n  return Wrapper;\n}\n\nvar StyledContainer = styled__default['default'].div(templateObject_1$1 || (templateObject_1$1 = __makeTemplateObject([\"\"], [\"\"])));\nvar templateObject_1$1;\n\nvar BaseSkeletonThemeProvider = function (_a) {\n  var _b = _a.color,\n      color = _b === void 0 ? Colors.background : _b,\n      _c = _a.animation,\n      animation = _c === void 0 ? 'shimmer' : _c,\n      _d = _a.animationDuration,\n      animationDuration = _d === void 0 ? 1 : _d,\n      style = _a.style,\n      highlight = _a.highlight,\n      children = _a.children,\n      _e = _a.dataTestId,\n      dataTestId = _e === void 0 ? 'SkeletonThemeProvider' : _e;\n\n  var _f = useSkeleton(),\n      changeBackgroundColor = _f.changeBackgroundColor,\n      changeAnimation = _f.changeAnimation,\n      changeHighlight = _f.changeHighlight,\n      changeAnimationDuration = _f.changeAnimationDuration;\n\n  React__namespace.useEffect(function () {\n    changeBackgroundColor(color);\n  }, [color, changeBackgroundColor]);\n  React__namespace.useEffect(function () {\n    changeAnimation(animation);\n  }, [animation, changeAnimation]);\n  React__namespace.useEffect(function () {\n    if (highlight) {\n      changeHighlight(highlight);\n    }\n  }, [highlight, changeHighlight]);\n  React__namespace.useEffect(function () {\n    changeAnimationDuration(animationDuration);\n  }, [animationDuration, changeAnimationDuration]);\n  return React__namespace.createElement(StyledContainer, {\n    style: style,\n    \"data-testid\": dataTestId\n  }, children);\n};\n\nvar SkeletonThemeProvider = withSkeletonContext(BaseSkeletonThemeProvider);\nvar shimmerAnimation = styled.keyframes(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  0% {\\n    background-position: 0% 0%;\\n  }\\n  100% {\\n    background-position: -135% 0%;\\n  }\\n\"], [\"\\n  0% {\\n    background-position: 0% 0%;\\n  }\\n  100% {\\n    background-position: -135% 0%;\\n  }\\n\"])));\n\nvar opacityAnimation = function (backgroundColor, isLighten) {\n  return styled.keyframes(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  0% {\\n    background-color: \", \";\\n  }\\n  100% {\\n    background-color: \", \";\\n  }\\n\"], [\"\\n  0% {\\n    background-color: \", \";\\n  }\\n  100% {\\n    background-color: \", \";\\n  }\\n\"])), backgroundColor, isLighten ? polished.darken(0.2, backgroundColor) : polished.lighten(0.4, backgroundColor));\n};\n\nvar AnimationVariations = function (backgroundColor, isLighten, animationDuration) {\n  return {\n    shimmer: styled.css(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n    &:after {\\n      position: absolute;\\n      content: '';\\n      width: 100%;\\n      height: 100%;\\n      background-image: linear-gradient(\\n        to right,\\n        \", \" 0%,\\n        \", \"\\n          50%,\\n        \", \" 100%\\n      );\\n      background-size: 400% 400%;\\n      animation: \", \" \", \"s linear infinite;\\n    }\\n  \"], [\"\\n    &:after {\\n      position: absolute;\\n      content: '';\\n      width: 100%;\\n      height: 100%;\\n      background-image: linear-gradient(\\n        to right,\\n        \", \" 0%,\\n        \", \"\\n          50%,\\n        \", \" 100%\\n      );\\n      background-size: 400% 400%;\\n      animation: \", \" \", \"s linear infinite;\\n    }\\n  \"])), backgroundColor, isLighten ? polished.darken(0.2, backgroundColor) : polished.lighten(0.2, backgroundColor), backgroundColor, shimmerAnimation, animationDuration),\n    opacity: styled.css(templateObject_4 || (templateObject_4 = __makeTemplateObject([\"\\n    animation: \", \"\\n      \", \"s linear infinite alternate;\\n  \"], [\"\\n    animation: \", \"\\n      \", \"s linear infinite alternate;\\n  \"])), opacityAnimation(backgroundColor, isLighten), animationDuration)\n  };\n};\n\nvar StyledSkeletonContainer = styled__default['default'].div(templateObject_5 || (templateObject_5 = __makeTemplateObject([\"\\n  width: \", \";\\n  height: \", \";\\n  background: \", \";\\n  position: relative;\\n  overflow: hidden;\\n  border-radius: \", \";\\n\\n  &:not(:last-child) {\\n    margin-bottom: \", \";\\n  }\\n\\n  \", \"\\n\"], [\"\\n  width: \", \";\\n  height: \", \";\\n  background: \", \";\\n  position: relative;\\n  overflow: hidden;\\n  border-radius: \", \";\\n\\n  &:not(:last-child) {\\n    margin-bottom: \", \";\\n  }\\n\\n  \", \"\\n\"])), function (props) {\n  return props.width;\n}, function (props) {\n  return props.height;\n}, function (props) {\n  return props.backgroundColor;\n}, function (props) {\n  return props.borderRadius;\n}, function (props) {\n  return props.spaceBetween;\n}, function (props) {\n  return AnimationVariations(props.backgroundColor, props.isLighten, props.animationDuration)[props.animation];\n});\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5;\n\nvar Skeleton = function (_a) {\n  var _b = _a.height,\n      height = _b === void 0 ? '30px' : _b,\n      _c = _a.width,\n      width = _c === void 0 ? '100%' : _c,\n      _d = _a.borderRadius,\n      borderRadius = _d === void 0 ? '4px' : _d,\n      style = _a.style,\n      _e = _a.count,\n      count = _e === void 0 ? 1 : _e,\n      _f = _a.spaceBetween,\n      spaceBetween = _f === void 0 ? '10px' : _f,\n      widthMultiple = _a.widthMultiple,\n      heightMultiple = _a.heightMultiple,\n      _g = _a.dataTestId,\n      dataTestId = _g === void 0 ? 'Skeleton' : _g;\n\n  var _h = useSkeleton(),\n      backgroundColor = _h.backgroundColor,\n      animation = _h.animation,\n      highlight = _h.highlight,\n      animationDuration = _h.animationDuration;\n\n  var _j = React__namespace.useState(true),\n      isLighten = _j[0],\n      setIsLighten = _j[1];\n\n  React__namespace.useEffect(function () {\n    if (highlight) {\n      setIsLighten(highlight !== 'light');\n    } else {\n      var isColorLight = lightOrDark(backgroundColor);\n      setIsLighten(isColorLight === 'light');\n    }\n  }, [highlight, backgroundColor]);\n  var renderSkeleton = Array.from(Array(count).keys()).map(function (_, index) {\n    var key = (Math.random() * 100000).toFixed(5);\n    var witdthSkeleton = (widthMultiple === null || widthMultiple === void 0 ? void 0 : widthMultiple.length) ? widthMultiple[index] || width : width;\n    var heightSkeleton = (heightMultiple === null || heightMultiple === void 0 ? void 0 : heightMultiple.length) ? heightMultiple[index] || height : height;\n    return React__namespace.createElement(StyledSkeletonContainer, {\n      isLighten: isLighten,\n      backgroundColor: backgroundColor,\n      animation: animation,\n      animationDuration: animationDuration,\n      width: witdthSkeleton,\n      height: heightSkeleton,\n      borderRadius: borderRadius,\n      style: style,\n      spaceBetween: spaceBetween,\n      key: key,\n      \"data-testid\": dataTestId + \"-\" + index\n    });\n  });\n  return React__namespace.createElement(React__namespace.Fragment, null, renderSkeleton);\n};\n\nSkeleton.SkeletonThemeProvider = SkeletonThemeProvider;\nexports.Skeleton = Skeleton;","map":{"version":3,"sources":["../src/helpers/lightOrDark.ts","../src/styles/Colors.ts","../src/context/SkeletonContext.tsx","../src/helpers/withSkeletonContext.tsx","../src/components/Skeleton/SkeletonThemeProvider/styles.ts","../src/components/Skeleton/SkeletonThemeProvider/index.tsx","../src/components/Skeleton/styles.ts","../src/components/Skeleton/index.tsx"],"names":["React","styled","keyframes","darken","lighten","css"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-bitwise */\n/* eslint-disable prefer-destructuring */\n\nexport function lightOrDark(color: any): 'light' | 'dark' {\n  // Variables for red, green, blue values\n  let r;\n  let g;\n  let b;\n\n  let colorTemp = color;\n\n  // Check the format of the color, HEX or RGB?\n  if (colorTemp.match(/^rgb/)) {\n    // If RGB --> store the red, green, blue values in separate variables\n    colorTemp = colorTemp.match(\n      /^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/,\n    );\n\n    r = colorTemp[1];\n    g = colorTemp[2];\n    b = colorTemp[3];\n  } else {\n    // If hex --> Convert it to RGB: http://gist.github.com/983661\n    colorTemp = +`0x${colorTemp\n      .slice(1)\n      .replace(colorTemp.length < 5 && /./g, '$&$&')}`;\n\n    r = colorTemp >> 16;\n    g = (colorTemp >> 8) & 255;\n    b = colorTemp & 255;\n  }\n  // HSP (Highly Sensitive Poo) equation from http://alienryderflex.com/hsp.html\n  const hsp = Math.sqrt(0.299 * (r * r) + 0.587 * (g * g) + 0.114 * (b * b));\n\n  // Using the HSP value, determine whether the color is light or dark\n  if (hsp > 127.5) {\n    return 'light';\n  }\n\n  return 'dark';\n}\n","export const Colors = {\n  background: '#F1EFF1',\n};\n","import * as React from 'react';\n\nimport { Colors } from '../styles/Colors';\n\nimport {\n  SkeletonContextProps,\n  IAuthProviderProps,\n  AnimationTypes,\n  HighlightTypes,\n} from '../components/Skeleton/types';\n\nexport const SkeletonContext = React.createContext<SkeletonContextProps>(\n  {} as SkeletonContextProps,\n);\n\nconst SkeletonProvider = ({ children }: IAuthProviderProps): JSX.Element => {\n  const [backgroundColor, setBackgroundColor] = React.useState(\n    Colors.background,\n  );\n  const [animation, setAnimation] = React.useState<AnimationTypes>('shimmer');\n  const [highlight, setHighlight] = React.useState<\n    HighlightTypes | undefined\n  >();\n  const [animationDuration, setAnimationDuration] = React.useState(1);\n\n  const changeBackgroundColor = React.useCallback((color: string) => {\n    setBackgroundColor(color);\n  }, []);\n\n  const changeAnimation = React.useCallback((anim: AnimationTypes) => {\n    setAnimation(anim);\n  }, []);\n\n  const changeHighlight = React.useCallback((high: HighlightTypes) => {\n    setHighlight(high);\n  }, []);\n\n  const changeAnimationDuration = React.useCallback((duration: number) => {\n    setAnimationDuration(duration);\n  }, []);\n\n  return (\n    <SkeletonContext.Provider\n      value={{\n        backgroundColor,\n        changeBackgroundColor,\n        animation,\n        changeAnimation,\n        highlight,\n        changeHighlight,\n        animationDuration,\n        changeAnimationDuration,\n      }}\n    >\n      {children}\n    </SkeletonContext.Provider>\n  );\n};\n\nfunction useSkeleton(): SkeletonContextProps {\n  const context = React.useContext(SkeletonContext);\n\n  if (!context) {\n    throw new Error('useSkeleton must be used within an SkeletonProvider');\n  }\n\n  return context;\n}\n\nexport { SkeletonProvider, useSkeleton };\n","import * as React from 'react';\n\nimport { SkeletonProvider } from '../context/SkeletonContext';\n\nexport function withSkeletonContext(\n  WrappedComponent: React.ElementType,\n): React.ElementType {\n  const Wrapper = (props: unknown) => {\n    return (\n      <SkeletonProvider>\n        <WrappedComponent {...props} />\n      </SkeletonProvider>\n    );\n  };\n\n  return Wrapper;\n}\n","import styled from 'styled-components';\n\nconst StyledContainer = styled.div``;\n\nexport { StyledContainer };\n","import * as React from 'react';\n\nimport { useSkeleton } from '../../../context/SkeletonContext';\nimport { withSkeletonContext } from '../../../helpers/withSkeletonContext';\nimport { Colors } from '../../../styles/Colors';\n\nimport { SkeletonThemeProviderProps } from './types';\nimport { StyledContainer } from './styles';\n\nconst BaseSkeletonThemeProvider = ({\n  color = Colors.background,\n  animation = 'shimmer',\n  animationDuration = 1,\n  style,\n  highlight,\n  children,\n  dataTestId = 'SkeletonThemeProvider',\n}: SkeletonThemeProviderProps): JSX.Element => {\n  const {\n    changeBackgroundColor,\n    changeAnimation,\n    changeHighlight,\n    changeAnimationDuration,\n  } = useSkeleton();\n\n  React.useEffect(() => {\n    changeBackgroundColor(color);\n  }, [color, changeBackgroundColor]);\n\n  React.useEffect(() => {\n    changeAnimation(animation);\n  }, [animation, changeAnimation]);\n\n  React.useEffect(() => {\n    if (highlight) {\n      changeHighlight(highlight);\n    }\n  }, [highlight, changeHighlight]);\n\n  React.useEffect(() => {\n    changeAnimationDuration(animationDuration);\n  }, [animationDuration, changeAnimationDuration]);\n\n  return (\n    <StyledContainer style={style} data-testid={dataTestId}>\n      {children}\n    </StyledContainer>\n  );\n};\n\nexport const SkeletonThemeProvider = withSkeletonContext(\n  BaseSkeletonThemeProvider,\n) as ({\n  color,\n  animation,\n  animationDuration,\n  style,\n  highlight,\n  children,\n  dataTestId,\n}: SkeletonThemeProviderProps) => JSX.Element;\n","import styled, { keyframes, css } from 'styled-components';\nimport { lighten, darken } from 'polished';\n\nimport { SkeletonStyledProps } from './types';\n\nconst shimmerAnimation = keyframes`\n  0% {\n    background-position: 0% 0%;\n  }\n  100% {\n    background-position: -135% 0%;\n  }\n`;\n\nconst opacityAnimation = (\n  backgroundColor: string,\n  isLighten: boolean,\n) => keyframes`\n  0% {\n    background-color: ${backgroundColor};\n  }\n  100% {\n    background-color: ${\n      isLighten ? darken(0.2, backgroundColor) : lighten(0.4, backgroundColor)\n    };\n  }\n`;\n\nconst AnimationVariations = (\n  backgroundColor: string,\n  isLighten: boolean,\n  animationDuration: number,\n) => ({\n  shimmer: css`\n    &:after {\n      position: absolute;\n      content: '';\n      width: 100%;\n      height: 100%;\n      background-image: linear-gradient(\n        to right,\n        ${backgroundColor} 0%,\n        ${isLighten\n            ? darken(0.2, backgroundColor)\n            : lighten(0.2, backgroundColor)}\n          50%,\n        ${backgroundColor} 100%\n      );\n      background-size: 400% 400%;\n      animation: ${shimmerAnimation} ${animationDuration}s linear infinite;\n    }\n  `,\n  opacity: css`\n    animation: ${opacityAnimation(backgroundColor, isLighten)}\n      ${animationDuration}s linear infinite alternate;\n  `,\n});\n\nconst StyledSkeletonContainer = styled.div<SkeletonStyledProps>`\n  width: ${props => props.width};\n  height: ${props => props.height};\n  background: ${props => props.backgroundColor};\n  position: relative;\n  overflow: hidden;\n  border-radius: ${props => props.borderRadius};\n\n  &:not(:last-child) {\n    margin-bottom: ${props => props.spaceBetween};\n  }\n\n  ${props =>\n    AnimationVariations(\n      props.backgroundColor,\n      props.isLighten,\n      props.animationDuration,\n    )[props.animation]}\n`;\n\nexport { StyledSkeletonContainer };\n","import * as React from 'react';\n\nimport { lightOrDark } from '../../helpers/lightOrDark';\nimport { useSkeleton } from '../../context/SkeletonContext';\n\nimport { SkeletonThemeProvider } from './SkeletonThemeProvider';\n\nimport { StyledSkeletonContainer } from './styles';\nimport { SkeletonProps } from './types';\n\nconst Skeleton = ({\n  height = '30px',\n  width = '100%',\n  borderRadius = '4px',\n  style,\n  count = 1,\n  spaceBetween = '10px',\n  widthMultiple,\n  heightMultiple,\n  dataTestId = 'Skeleton',\n}: SkeletonProps): JSX.Element => {\n  const { backgroundColor, animation, highlight, animationDuration } =\n    useSkeleton();\n  const [isLighten, setIsLighten] = React.useState(true);\n\n  React.useEffect(() => {\n    if (highlight) {\n      setIsLighten(highlight !== 'light');\n    } else {\n      const isColorLight = lightOrDark(backgroundColor);\n\n      setIsLighten(isColorLight === 'light');\n    }\n  }, [highlight, backgroundColor]);\n\n  const renderSkeleton = Array.from(Array(count).keys()).map((_, index) => {\n    const key = (Math.random() * 100000).toFixed(5);\n\n    const witdthSkeleton = widthMultiple?.length\n      ? widthMultiple[index] || width\n      : width;\n    const heightSkeleton = heightMultiple?.length\n      ? heightMultiple[index] || height\n      : height;\n    return (\n      <StyledSkeletonContainer\n        isLighten={isLighten}\n        backgroundColor={backgroundColor}\n        animation={animation}\n        animationDuration={animationDuration}\n        width={witdthSkeleton}\n        height={heightSkeleton}\n        borderRadius={borderRadius}\n        style={style}\n        spaceBetween={spaceBetween}\n        key={key}\n        data-testid={`${dataTestId}-${index}`}\n      />\n    );\n  });\n\n  return <>{renderSkeleton}</>;\n};\n\nSkeleton.SkeletonThemeProvider = SkeletonThemeProvider;\n\nexport { Skeleton };\n"]},"metadata":{},"sourceType":"script"}