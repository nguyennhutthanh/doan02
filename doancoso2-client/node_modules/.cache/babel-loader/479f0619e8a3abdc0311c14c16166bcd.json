{"ast":null,"code":"const addItem = [];\n\nconst addItems = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : addItem;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADDCART\":\n      return [...state, action.payload];\n      break;\n\n    case \"DELCART\":\n      return state = state.filter(x => {\n        return x.id !== action.payload.id;\n      });\n      break;\n\n    default:\n      return state;\n      break;\n  }\n};\n\nexport default addItems; // const product = action.payload;\n// switch (action.type) {\n//     case \"ADDCART\":\n//         const exits = state.find((x) => x.id === product.id);\n//         if (exits) {\n//             return state.map((x) =>\n//                 x.id === product.id ? { ...x, qty: x.qty + 1 } : x);\n//         } else {\n//             const product = action.payload;\n//             return [\n//                 ...state,\n//                 { ...product, qty: 1 },\n//             ]\n//         }\n//         break;\n//     case \"DELCART\":\n//         const exits1 = state.find((x) => x.id === product.id);\n//         if (exits1.qty === 1) {\n//             return state.filter((x) => x.id !== exits1.id);\n//         } else {\n//             return state.map((x) =>\n//                 x.id === product.id\n//                     ? { ...x, qty: x.qty - 1 } : x\n//             );\n//         }\n//         break;\n//     default:\n//         return state\n//         break;","map":{"version":3,"sources":["D:/DoAnCoSo2/doancoso2-client/src/redux/reducers/addItem.js"],"names":["addItem","addItems","state","action","type","payload","filter","x","id"],"mappings":"AAAA,MAAMA,OAAO,GAAG,EAAhB;;AAEA,MAAMC,QAAQ,GAAG,YAA6B;AAAA,MAA5BC,KAA4B,uEAApBF,OAAoB;AAAA,MAAXG,MAAW;;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,SAAL;AAAgB,aAAO,CACnB,GAAGF,KADgB,EAEnBC,MAAM,CAACE,OAFY,CAAP;AAIZ;;AACJ,SAAK,SAAL;AAAgB,aAAOH,KAAK,GAAGA,KAAK,CAACI,MAAN,CAAcC,CAAD,IAAO;AAC/C,eAAOA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACE,OAAP,CAAeG,EAA/B;AACH,OAF8B,CAAf;AAGZ;;AACJ;AAAS,aAAON,KAAP;AACL;AAXR;AAaH,CAdD;;AAgBA,eAAeD,QAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["const addItem = []\r\n\r\nconst addItems = (state = addItem, action) => {\r\n    switch (action.type) {\r\n        case \"ADDCART\": return [\r\n            ...state,\r\n            action.payload,\r\n        ]\r\n            break;\r\n        case \"DELCART\": return state = state.filter((x) => {\r\n            return x.id !== action.payload.id\r\n        })\r\n            break;\r\n        default: return state\r\n            break;\r\n    }\r\n}\r\n\r\nexport default addItems;\r\n\r\n// const product = action.payload;\r\n// switch (action.type) {\r\n//     case \"ADDCART\":\r\n//         const exits = state.find((x) => x.id === product.id);\r\n//         if (exits) {\r\n//             return state.map((x) =>\r\n//                 x.id === product.id ? { ...x, qty: x.qty + 1 } : x);\r\n//         } else {\r\n//             const product = action.payload;\r\n//             return [\r\n//                 ...state,\r\n//                 { ...product, qty: 1 },\r\n//             ]\r\n//         }\r\n\r\n//         break;\r\n//     case \"DELCART\":\r\n//         const exits1 = state.find((x) => x.id === product.id);\r\n//         if (exits1.qty === 1) {\r\n//             return state.filter((x) => x.id !== exits1.id);\r\n//         } else {\r\n//             return state.map((x) =>\r\n//                 x.id === product.id\r\n//                     ? { ...x, qty: x.qty - 1 } : x\r\n//             );\r\n//         }\r\n//         break;\r\n//     default:\r\n//         return state\r\n//         break;"]},"metadata":{},"sourceType":"module"}