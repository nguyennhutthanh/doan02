{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nconst initialState = {\n  cartItems: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [],\n  cartTotalQuantity: 0,\n  cartTotalAmount: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart(state, action) {\n      const existingIndex = state.cartItems.findIndex(item => item.id === action.payload.id);\n\n      if (existingIndex >= 0) {\n        state.cartItems[existingIndex] = { ...state.cartItems[existingIndex],\n          cartQuantity: state.cartItems[existingIndex].cartQuantity + 1\n        };\n        toast.info(`${state.cartItems[existingIndex].tenSP} tăng thêm 1`, {\n          position: \"bottom-left\"\n        });\n      } else if (existingIndexs <= 0) {\n        toast.success(\"sản phẩm này đã hết\", {\n          position: \"bottom-left\"\n        });\n      } else {\n        let tempProductItem = { ...action.payload,\n          cartQuantity: 1\n        };\n        state.cartItems.push(tempProductItem);\n        toast.success(`${action.payload.tenSP} vừa thêm vào giỏ`, {\n          position: \"bottom-left\"\n        });\n      }\n\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n\n    decreaseCart(state, action) {\n      const itemIndex = state.cartItems.findIndex(item => item.id === action.payload.id);\n\n      if (state.cartItems[itemIndex].cartQuantity > 1) {\n        state.cartItems[itemIndex].cartQuantity -= 1;\n        toast.info(`${action.payload.tenSP} đã giảm 1`, {\n          position: \"bottom-left\"\n        });\n      } else if (state.cartItems[itemIndex].cartQuantity === 1) {\n        const nextCartItems = state.cartItems.filter(item => item.id !== action.payload.id);\n        state.cartItems = nextCartItems;\n        toast.error(`${action.payload.tenSP} đã được xóa khỏi giỏ hàng`, {\n          position: \"bottom-left\"\n        });\n      }\n\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n\n    removeFromCart(state, action) {\n      state.cartItems.map(cartItem => {\n        if (cartItem.id === action.payload.id) {\n          const nextCartItems = state.cartItems.filter(item => item.id !== cartItem.id);\n          state.cartItems = nextCartItems;\n          toast.error(`${cartItem.tenSP} đã bị xóa khỏi giỏ hàng`, {\n            position: \"bottom-left\"\n          });\n        }\n\n        localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n        return state;\n      });\n    },\n\n    getTotals(state, action) {\n      let {\n        total,\n        quantity\n      } = state.cartItems.reduce((cartTotal, cartItem) => {\n        const {\n          giaSP,\n          cartQuantity,\n          khuyenMaiNavigation,\n          giaKhuyenMai\n        } = cartItem;\n        const itemTotal = khuyenMaiNavigation.sale > 0 ? giaKhuyenMai * cartQuantity : giaSP * cartQuantity;\n        cartTotal.total += itemTotal;\n        cartTotal.quantity += cartQuantity;\n        return cartTotal;\n      }, {\n        total: 0,\n        quantity: 0\n      });\n      total = parseFloat(total.toFixed(2));\n      state.cartTotalQuantity = quantity;\n      state.cartTotalAmount = total;\n    },\n\n    clearCart(state, action) {\n      state.cartItems = [];\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n      toast.error(\"Đã xóa tất cả sản phẩm trong giỏ\", {\n        position: \"bottom-left\"\n      });\n    }\n\n  }\n});\nexport const {\n  addToCart,\n  decreaseCart,\n  removeFromCart,\n  getTotals,\n  clearCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["D:/DoAnCoSo2/doancoso02client-gui/doancoso2-client/src/features/cartSlice.js"],"names":["createSlice","toast","initialState","cartItems","localStorage","getItem","JSON","parse","cartTotalQuantity","cartTotalAmount","cartSlice","name","reducers","addToCart","state","action","existingIndex","findIndex","item","id","payload","cartQuantity","info","tenSP","position","existingIndexs","success","tempProductItem","push","setItem","stringify","decreaseCart","itemIndex","nextCartItems","filter","error","removeFromCart","map","cartItem","getTotals","total","quantity","reduce","cartTotal","giaSP","khuyenMaiNavigation","giaKhuyenMai","itemTotal","sale","parseFloat","toFixed","clearCart","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst initialState = {\r\n    cartItems: localStorage.getItem(\"cartItems\")\r\n        ? JSON.parse(localStorage.getItem(\"cartItems\")) : [],\r\n    cartTotalQuantity: 0,\r\n    cartTotalAmount: 0,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n    name: \"cart\",\r\n    initialState,\r\n    reducers: {\r\n        addToCart(state, action) {\r\n            const existingIndex = state.cartItems.findIndex(\r\n                (item) => item.id === action.payload.id\r\n            );\r\n            if (existingIndex >= 0) {\r\n                state.cartItems[existingIndex] = {\r\n                    ...state.cartItems[existingIndex],\r\n                    cartQuantity: state.cartItems[existingIndex].cartQuantity + 1,\r\n                };\r\n                toast.info(`${state.cartItems[existingIndex].tenSP} tăng thêm 1`, {\r\n                    position: \"bottom-left\",\r\n                });\r\n            } else if (existingIndexs <= 0) {\r\n                toast.success(\"sản phẩm này đã hết\", {\r\n                    position: \"bottom-left\",\r\n                });\r\n            }\r\n            else {\r\n                let tempProductItem = { ...action.payload, cartQuantity: 1 };\r\n                state.cartItems.push(tempProductItem);\r\n                toast.success(`${action.payload.tenSP} vừa thêm vào giỏ`, {\r\n                    position: \"bottom-left\",\r\n                });\r\n            }\r\n            localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\r\n        },\r\n        decreaseCart(state, action) {\r\n            const itemIndex = state.cartItems.findIndex(\r\n                (item) => item.id === action.payload.id\r\n            );\r\n\r\n            if (state.cartItems[itemIndex].cartQuantity > 1) {\r\n                state.cartItems[itemIndex].cartQuantity -= 1;\r\n\r\n                toast.info(`${action.payload.tenSP} đã giảm 1`, {\r\n                    position: \"bottom-left\",\r\n                });\r\n            } else if (state.cartItems[itemIndex].cartQuantity === 1) {\r\n                const nextCartItems = state.cartItems.filter(\r\n                    (item) => item.id !== action.payload.id\r\n                );\r\n\r\n                state.cartItems = nextCartItems;\r\n\r\n                toast.error(`${action.payload.tenSP} đã được xóa khỏi giỏ hàng`, {\r\n                    position: \"bottom-left\",\r\n                });\r\n            }\r\n\r\n            localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\r\n        },\r\n        removeFromCart(state, action) {\r\n            state.cartItems.map((cartItem) => {\r\n                if (cartItem.id === action.payload.id) {\r\n                    const nextCartItems = state.cartItems.filter(\r\n                        (item) => item.id !== cartItem.id\r\n                    );\r\n\r\n                    state.cartItems = nextCartItems;\r\n\r\n                    toast.error(`${cartItem.tenSP} đã bị xóa khỏi giỏ hàng`, {\r\n                        position: \"bottom-left\",\r\n                    });\r\n                }\r\n                localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\r\n                return state;\r\n            });\r\n        },\r\n        getTotals(state, action) {\r\n            let { total, quantity } = state.cartItems.reduce(\r\n                (cartTotal, cartItem) => {\r\n                    const { giaSP, cartQuantity, khuyenMaiNavigation, giaKhuyenMai } = cartItem;\r\n                    const itemTotal = khuyenMaiNavigation.sale > 0 ? giaKhuyenMai * cartQuantity : giaSP * cartQuantity\r\n\r\n                    cartTotal.total += itemTotal;\r\n                    cartTotal.quantity += cartQuantity;\r\n\r\n                    return cartTotal;\r\n                },\r\n                {\r\n                    total: 0,\r\n                    quantity: 0,\r\n                }\r\n            );\r\n            total = parseFloat(total.toFixed(2));\r\n            state.cartTotalQuantity = quantity;\r\n            state.cartTotalAmount = total;\r\n        },\r\n        clearCart(state, action) {\r\n            state.cartItems = [];\r\n            localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\r\n            toast.error(\"Đã xóa tất cả sản phẩm trong giỏ\", { position: \"bottom-left\" });\r\n        },\r\n    },\r\n});\r\n\r\nexport const { addToCart, decreaseCart, removeFromCart, getTotals, clearCart } =\r\n    cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}